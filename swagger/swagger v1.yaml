swagger: "2.0"
info:
  description: "This is a sample API."
  version: "1.0.0"
  title: "Events API"
  termsOfService: "http://localhost/"
  contact:
    email: "example@example"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "events.example.com"
basePath: "/v1"
tags:
- name: "event"
  description: "Everything about events"
  externalDocs:
    description: "Find out more"
    url: "http://event.examle"
schemes:
- "http"
paths:
  /event:
    post:
      tags:
      - "event"
      summary: "Add a new event to the events"
      description: ""
      operationId: "addEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "405":
          description: "Invalid input"
  /event/{eventId}:
    get:
        tags:
        - "event"
        summary: "Find events by ID"
        description: "Return a single event"
        operationId: "findEventsById"
        produces:
        - "application/json"
        parameters:
        - name: "eventId"
          in: "path"
          description: "ID of event"
          required: true
          type: "integer"
          format: "int64"
        responses:
          "200":
            description: "successful operation"
            schema:
              $ref: "#/definitions/Event"
          "400":
            description: "Invalid ID supplied"
          "404":
            description: "Event not found"
    delete:
      tags:
        - "event"
      summary: "Delete event"
      description: ""
      operationId: "deleteEvent"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "Event ID to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
  /event/findByTitle:
    get:
      tags:
      - "event"
      summary: "Find events by title"
      description: ""
      operationId: "findEventsByTitle"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "query"
        description: "Event title"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        "400":
          description: "Invalid title value"
definitions:
  Event:
    type: "object"
    required:
    - "title"
    - "status"
    - "date"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "BRING ME THE HORIZON"
      status:
        type: "string"
        description: "event status"
        enum:
        - "await"
        - "passed"
      date:
        type: "string"
        format: "date"